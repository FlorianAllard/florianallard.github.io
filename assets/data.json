{
  "projects": [
    {
      "id": "vgdb",
      "title": "VGDB",
      "cover": {
        "src": "/assets/images/vgdb/thumbnail.png",
        "alt": "vgdb-thumbnail"
      },
      "desc": "Projet personnel développé pour le web. Site d'aggrégation de données sur les jeux vidéo, proposant un moteur de recherche robuste pour explorer une base de données nourrie par plusieurs API populaires de l'industrie vidéoludique.",
      "chips": ["HTML", "SCSS", "JavaScript"],
      "overlayContent": [
        {
          "type": "iframe",
          "src": "https://www.youtube.com/embed/t4W9mbXHhac"
        },
        {
          "type": "h3",
          "content": ["Projet"]
        },
        {
          "type": "p",
          "content": [
            "VGDB (Video Game DataBase) est un projet personnel que j'ai commencé afin de m'entraîner au développement web front & back. Le site est construit en HTML, SCSS et JavaScript et s'appuie sur les données de plusieurs API:",
            "- <b>IGDB</b> (données générales des jeux: les platformes, les dates de sorties, leur développeur etc).",
            "- <b>OpenCritic</b> (les notes et les liens vers les critiques du jeu).",
            "- <b>IsThereAnyDeal</b> (les prix les plus avantageux pour acheter le jeu).",
            "Pour des raisons techniques, le site n'est pas encore disponible en ligne."
          ]
        },
        {
          "type": "h4",
          "content": ["Page d'accueil"]
        },
        {
          "type": "p",
          "content": [
            "La page d'accueil de VGDB propose un aperçu des jeux les plus populaires du moment (basé sur le nombre de ventes/ajout au compte Steam), les jeux les plus anticipés et les jeux sortant le lendemain."
          ]
        },
        {
          "type": "img",
          "src": "/assets/images/vgdb/home.png",
          "alt": "vgdb-home"
        },
        {
          "type": "h4",
          "content": ["Page de jeu"]
        },
        {
          "type": "p",
          "content": [
            "La page d'un jeu regroupe l'intégralité des données disponlibles sur le jeu: ses spécificités, les entreprises impliquées dans son développement, un résumé de son histoire, sa localisation, les notes et les critiques de la presse, les prix les plus avantageux pour l'acheter et ses médias (artworks, screenshots et vidéos).",
            "Une évolution possible de cette page serait de permettre à l'utilisateur d'éditer les informations du jeu et de les sauvegarder dans la propre base de données de VGDB."
          ]
        },
        {
          "type": "img",
          "src": "/assets/images/vgdb/game.png",
          "alt": "vgdb-game"
        },
        {
          "type": "h4",
          "content": ["Page de rehcherche"]
        },
        {
          "type": "p",
          "content": [
            "Il est possible de rechercher un jeu ou de filtrer les jeux disponible via la page de recherche. On peut filtrer les jeux par plateforme, par genre, par date de sortie ou par série/franchise."
          ]
        },
        {
          "type": "img",
          "src": "/assets/images/vgdb/search.png",
          "alt": "vgdb-search"
        },
        {
          "type": "h3",
          "content": ["La suite"]
        },
        {
          "type": "p",
          "content": [
            "Les prochaines features envisagées pour VGDB sont les suivantes:",
            "- <b>Ajout d'une base de données propre à VGDB</b>: Cette DB, nourrie dans un premier temps par les API citées plus haut, serait modifiable par les utilisateurs et permettrait une plus grande indépendance vis à vis des API.",
            "- <b>Gestion des utilisateurs</b>: création de compte, connection, gestion du compte et de sa ludothèque",
            "- <b>Ajout de critiques et de notations par les utilisateurs</b>: chaque utilisateur pourrait noter et critiquer les jeux de sa ludothèque.",
            "- <b>Partage de sa ludothèque</b>: on pourrait y voir les jeux détenus par un utilisateur, les jeux qu'il a noté et critiqué, et les jeux qu'il a en wishlist."
          ]
        }
      ]
    },
    {
      "id": "oversoc",
      "title": "OverSOC",
      "cover": {
        "src": "/assets/images/oversoc/thumbnail.png",
        "alt": "oversoc-thumbnail"
      },
      "desc": "Logiciel de cartographie 3D de la cybersécurité. OverSOC permet aux utilisateurs d'agréger leurs données sensibles et de générer une carte représentant leur réseau, ses vulnérabilités et ses failles en temps réel.",
      "chips": ["C#", "Unity", "UI", "UX", "Agile (Scrum)"],
      "overlayContent": [
        {
          "type": "img",
          "src": "/assets/images/oversoc/main.webp",
          "alt": "oversoc-main",
          "modifier": "main-img"
        },
        {
          "type": "h3",
          "content": ["Historique"]
        },
        {
          "type": "p",
          "content": [
            "OverSOC est une entreprise de conseil et d'édition de logiciels de cybersécurité basée à Lille. Ils aident les entreprises à agréger leurs données cyber et à prioriser leurs prises de décision. Je les ai rejoins en tant que Développeur Unity en juin 2021 afin de renforcer l'équipe de développement du logiciel OverSOC: un logiciel d’agrégation de données cyber s'inscrivant dans le CAASM (Cyber Asset Attack Surface Management).",
            "<strong>J’ai rapidement démontré mes compétences UI/UX Design, jusqu'à ce qu'on me propose le poste de Lead Designer que j’ai occupé jusqu’à mon départ en juillet 2024.</strong>",
            "J’ai acquis beaucoup d’expérience durant ces années et accomplis des missions variées, allant de la création d'une charte graphique à une refonte totale de l'expérience utilisateur du logiciel."
          ]
        },
        {
          "type": "h3",
          "content": ["Charte graphique et logo"]
        },
        {
          "type": "p",
          "content": [
            "Ma première mission en tant que Lead Designer d’OverSOC a été d’établir une <b>nouvelle charte graphique et un nouveau logo pour l’entreprise</b>.",
            "Ce changement avait pour objectif de donner <b>une image plus sérieuse à nos potentiels clients</b>: en effet, la direction de l’entreprise jusqu’ici était de présenter OverSOC comme une solution alliant cybersécurité et jeux vidéo (le moteur du logiciel était Unity 3D, un moteur destiné au jeu vidéo). Cette appellation laissait penser un manque de sérieux de notre part, d’où le choix de pivoter sur le message et donc l’identité visuelle du produit.",
            "J’ai tenu à ce que cette nouvelle charte graphique soit <b>plus accessible</b> que la précédente: des contrastes de couleurs suffisants pour les daltoniens, des polices plus faciles à lire pour les dyslexiques etc."
          ]
        },
        {
          "type": "img",
          "src": "/assets/images/oversoc/new-logo.png",
          "alt": "oversoc-new-logo",
          "modifier": "side-margins"
        },
        {
          "type": "p",
          "content": [
            "Les typographies sélectionnées ont été Montserrat et Roboto. Ces polices offrent une lisibilité optimales, qui répondent parfaitement à l’<b>enjeu d’accessibilité</b> de la nouvelle charte graphique.",
            "Pour la sélection des nouvelles couleurs, nous avons opté pour des couleurs allant du bleu au cyan associé à du blanc. Ces couleurs évoquent <b>la confiance, le professionnalisme et la sécurité</b> tout en conservant une notion de dynamisme ou d’énergie."
          ]
        },
        {
          "type": "img",
          "src": "/assets/images/oversoc/gradient.png",
          "alt": "oversoc-gradient",
          "modifier": "side-margins"
        },
        {
          "type": "p",
          "content": [
            "Pour créer le nouveau logo, nous avons commencé par proposer plusieurs concepts différents à nos collègues, qui ont voté pour celui qu’ils préféraient. Le concept choisi a ensuite été <b>modélisé en 3D</b> afin d’obtenir un rendu rappelant la fonctionnalité phare du logiciel qu’est la cartographie 3D. Nous avons enfin appliqué les couleurs de la nouvelle charte graphique à la forme puis ajouté un cadre aux bords arrondis blanc pour assurer la lisibilité sur n’importe quel fond."
          ]
        },
        {
          "type": "img",
          "src": "/assets/images/oversoc/logo-versions.webp",
          "alt": "oversoc-logo-versions",
          "modifier": "side-margins"
        },
        {
          "type": "h3",
          "content": ["Design kit"]
        },
        {
          "type": "p",
          "content": [
            "Une fois la nouvelle charte graphique validée, j’ai établi un design kit qui est utilisé par l’ensemble de l’entreprise. Dans ce kit, on peut retrouver un <b>guide d’utilisation des couleurs et des typographies</b>, ainsi que les différents <b>composants nécessaires à la construction d’interfaces</b> (boutons, champs de texte etc).",
            "Ce kit assure que la <b>nouvelle charte graphique soit utilisée de manière homogène</b> à travers les différentes productions de l’entreprise comme le logiciel, le site vitrine, les publications commerciales, le marketing etc. et que les équipes de développement soient autonomes dans son implémentation.",
            "<strong>Ce kit a été utilisé par l’ensemble de l’entreprise depuis sa création: il permet aux équipes de gagner du temps et assure une homogénéité à travers les médias qu'elles produisent.</strong>"
          ]
        },
        {
          "type": "img",
          "src": "/assets/images/oversoc/design-kit.png",
          "alt": "oversoc-design-kit"
        },
        {
          "type": "h3",
          "content": ["Interface web administrative"]
        },
        {
          "type": "h4",
          "content": ["Un besoin d'autonomie"]
        },
        {
          "type": "p",
          "content": [
            "À mesure qu’OverSOC accueillait de nouveaux clients, plusieurs points de blocages ont été relevés, entre autres:",
            "- <b>Un manque d’administration des différents utilisateurs d’une licence OverSOC</b>. Il y avait un véritable besoin de restreindre l’accès aux données sensibles à certains utilisateurs au sein de la même équipe chez la plupart de nos clients.",
            "- <b>La distribution inefficace des nouvelles versions d’OverSOC</b>.Jusqu’ici, les utilisateurs devaient demander un lien de téléchargement des nouveaux builds.",
            "- <b>Une différence de cas d’usage entre les deux personae cibles du logiciel</b>. Les “administrateurs” (ceux qui s’occupent de souscrire à OverSOC et à distribuer les accès dans leur organisation) et les “opérateurs” (ceux qui utilisent OverSOC quotidiennement et qui ont des comptes à rendre aux décideurs)."
          ]
        },
        {
          "type": "h4",
          "content": ["Une interface dédiée pour les décideurs"]
        },
        {
          "type": "p",
          "content": [
            "Il a donc été décidé de mettre au point une <b>interface web d’administration (baptisée WebAdmin)</b> afin de donner plus d’autonomie aux utilisateurs dans la gestion de leur licence OverSOC et de libérer plus de ressources au sein de notre équipe."
          ]
        },
        {
          "type": "img",
          "src": "/assets/images/oversoc/user-flow.png",
          "alt": "oversoc-user-flow",
          "modifier": "side-margins"
        },
        {
          "type": "p",
          "content": [
            "J’ai commencé la conception de WebAdmin en listant les fonctionnalités nécessaires pour ensuite construire le parcours utilisateur, et enfin aider à la priorisation du développement. <b>Une fois le parcours validé à l’aide de tests utilisateurs, j’ai produit les maquettes, rédigé les User Stories.</b>",
            "<strong>Depuis la mise en production de WebAdmin , nous avons constaté que les utilisateurs gèrent eux-mêmes leur licence, apprennent à utiliser OverSOC et le mettent à jour en toute autonomie.</strong>"
          ]
        },
        {
          "type": "img",
          "src": "/assets/images/oversoc/web-admin.png",
          "alt": "oversoc-web-admin"
        },
        {
          "type": "h3",
          "content": ["Refonte UI/UX du logiciel"]
        },
        {
          "type": "h4",
          "content": ["Une architecture de l'information contraignante"]
        },
        {
          "type": "p",
          "content": [
            "En plus des points de blocages cités ci-dessus, de nouvelles contraintes liées aux nouvelles sources de données adoptées par OverSOC ont vu le jour. En effet, jusqu’ici OverSOC se chargeait d’intégrer des données liés aux machines du client (ordinateurs, serveurs, imprimantes...) comme leur connectique, leurs vulnérabilités, ou encore les agents EDR installés. Ces données étaient accessibles via des modes, qui changeaient le type de donné affiché en fonction du mode sélectionné:",
            "- Le mode Cartographie, qui représente l’infrastructure des machines (ports, IPv4, système d’exploitation...)",
            "- Le mode Vulnérabilité, qui représente les failles de sécurité de chaque machine",
            "- Le mode Alerte, qui représente les éventuelles attaques ayant impacté chaque machine",
            "- Le mode Conformité, qui représente la couverture EDR sur l’ensemble des machines",
            "Ces modes définissent également l’apparence des assets dans la carte 3D: la hauteur et la couleur.",
            "<b>Cet éparpillement des informations générait une frustration chez nos utilisateurs . Ceux-ci exprimaient que leurs données devait être facile et rapide d’accès, ce qui n’était pas le cas dans l’étât actuel du logiciel.</b>"
          ]
        },
        {
          "type": "img",
          "src": "/assets/images/oversoc/old-version.webp",
          "alt": "oversoc-old-version"
        },
        {
          "type": "p",
          "content": [
            "De plus, avec l’<b>augmentation presque exponentielle des types de données</b> gérés par OverSOC (données applicatives, données de pare-feu, données des utilisateurs...) il est vite devenu évident qu’il fallait trouver un nouveau moyen de rendre <b>accessible, lisible et exploitable toutes ces informations en quelques clics.</b>"
          ]
        },
        {
          "type": "h4",
          "content": ["Une modularité extensible"]
        },
        {
          "type": "p",
          "content": [
            "Afin de m’aiguiller vers une solution, j’ai commencé par mettre à plat les différentes données qu’OverSOC traitait déjà et celles que l’on comptait traiter ensuite. <b>J’ai ensuite animé plusieurs ateliers de tri de carte en interne et avec nos utilisateurs</b> afin d’assigner ces données à des types d’assets différents (machine, application, vulnérabilité, utilisateur, alerte...)."
          ]
        },
        {
          "type": "img",
          "src": "/assets/images/oversoc/card-sorting.png",
          "alt": "oversoc-card-sorting",
          "modifier": "side-margins"
        },
        {
          "type": "p",
          "content": [
            "<strong>Les ateliers utilisateurs ont confirmé que l’architecture de l’information du logiciel n’était pas optimale et était difficilement maintenable.</strong>",
            "<strong>Ils nous ont également donné une direction vers laquelle se diriger afin d’obtenir une architecture flexible, efficace et intuitive.</strong>",
            "La solution adoptée était <b>s’affranchir des modes, de proposer toute les catégories de données à tout moment et de laisser la main à l’utilisateur</b> dans la configuration de la carte 3D:",
            "- L’utilisateur peux consulter les données à n’importe quel moment, sans dépendance avec la configuration de la carte 3D.",
            "- Il peut choisir la donnée qui défini le groupement, la couleur et la dimension de ses assets.",
            "- Il était prévu d'ajouter dans une itération future de lui laisser le choix du type d’asset à afficher dans la carte 3D (machine, application, utilisateur...).",
            "Nous avons également <b>retravaillé le système de filtrage du logiciel afin de se rapprocher d’un filtrage en langage parlé.</b>",
            "Grâce à cette nouvelle architecture de l’information et à la refonte du filtrage, nous avons pu <b>ajouter plus d’options de tri et de filtrage aux tableaux afin de faciliter la manipulation de la données.</b>"
          ]
        },
        {
          "type": "img",
          "src": "/assets/images/oversoc/new-filters.png",
          "alt": "oversoc-new-filters"
        },
        {
          "type": "img",
          "src": "/assets/images/oversoc/new-table.png",
          "alt": "oversoc-new-table"
        },
        {
          "type": "h3",
          "content": ["Site vitrine"]
        },
        {
          "type": "p",
          "content": [
            "Pendant deux semaines, j’ai assisté l’équipe Marketing pour leur projet de refonte du site vitrine. Cette refonte avait pour but d’<b>adapter notre discours à la nouvelle stratégie commerciale</b>, et ce fut l'occasion parfaite d'<b>adapter le site à la nouvelle charte graphique.</b>",
            "Ce projet était sous une contrainte de temps: le nouveau site devait être mis en production avant le début d’un grand salon de la cyber régional. Le site a été mis en ligne dans les temps, et la réception du public a été favorable.",
            "<b>J’ai maquetté l’intégralité du site sur Figma</b> à partir des concepts et du contenu que m’ont transmis l’équipe Marketing. Une fois les maquettes terminées, j’ai continué d’assister l’équipe Marketing en participant au suivi du développement du site."
          ]
        },
        {
          "type": "img",
          "src": "/assets/images/oversoc/website.png",
          "alt": "oversoc-website"
        },

        {
          "type": "a",
          "label": "Consulter le site",
          "href": "https://www.oversoc.com"
        },
        {
          "type": "h3",
          "content": ["OverSOC web-only"]
        },
        {
          "type": "p",
          "content": [
            "Après plusieurs années passées sous forme de client lourd développé sur le moteur 3D Unity, le logiciel OverSOC allait revoir le jour sous la forme d’une version web-only.   En effet, nous avons accumulé beaucoup de dette technique du fait qu’un logiciel Unity est difficilement maintenable et que la performance du logiciel était loin d’être idéale chez la plupart de nos utilisateurs.",
            "Nous avons donc amorcé la conception d’OverSOC comme interface exclusivement web. En plus de ce changement de format, il a été décidé de se concentrer sur l’agrégation et l’enrichissement de données ce qui conduit à un passage au second plan de la cartographie 3D. Celle-ci étant centrale à la version précédente d’OverSOC, il était nécessaire de reconcevoir l’intégralité du logiciel en s’inspirant de l’existant pour perdre le moins de temps possible.",
            "<strong>Ma dernière mission au sein d’OverSOC a été d’établir le nouveau parcours utilisateur en animant plusieurs ateliers en interne et avec nos clients.</strong>",
            "J’ai ensuite créé les maquettes basse fidélité de ce parcours, qui ont été utilisées après mon départ pour le développement de la nouvelle version."
          ]
        },
        {
          "type": "img",
          "src": "/assets/images/oversoc/web-only.jpg",
          "alt": "oversoc-web-only"
        }
      ]
    },
    {
      "id": "notaspyware",
      "title": "Not A Spyware",
      "cover": {
        "src": "/assets/images/notaspyware/thumbnail.png",
        "alt": "notaspyware-thumbnail"
      },
      "desc": "Projet étudiant développé sur Unity. Incarnez un espion freelance et infiltrez-vous dans les endroits les plus sécurisés du globe pour saboter le plan de domination d'une mystérieuse organisation.",
      "chips": ["C#", "Unity"],
      "overlayContent": [
        {
          "type": "img",
          "src": "/assets/images/notaspyware/main.png",
          "alt": "notaspyware-main",
          "modifier": "main-img"
        },
        {
          "type": "a",
          "label": "Télécharger la démo",
          "href": ""
        },
        {
          "type": "h3",
          "content": ["Présentation"]
        },
        {
          "type": "p",
          "content": [
            "Not A Spyware est un projet étudiant développé sur Unity.",
            "<strong>Dans le cadre de l'obtention de mon Master, j'ai décidé de développer seul pendant 2 ans un jeu d'infiltration satirique dans une ambiance rétro-futuriste.</strong>",
            "Le joueur incarne un espion freelance au tout début de sa carrière. Au cours des 7 missions périlleuses, il doit s'infiltrer dans des endroits de plus en plus grands et complexes afin de déjouer le plan de l'antagoniste."
          ]
        },
        {
          "type": "img",
          "src": "/assets/images/notaspyware/gameplay.png",
          "alt": "notaspyware-gameplay"
        },
        {
          "type": "h3",
          "content": ["Conception"]
        },
        {
          "type": "p",
          "content": [
            "J'ai commencé à concevoir Not A Spyware en m'inspirant de différentes licences:",
            "- <b>Deux Ex et Dishonored</b>: le level design de ces jeux, appelés des Immersive Sims, propose aux joueurs plusieurs chemins à prendre pour atteindre un objectif suivant leur style de jeu.",
            "- <b>Persona</b>: dans cette série de jeu, le joueur doit trouver l'équilibre entre la vie lycéenne et l'exploration de donjons. C'est à partir de cette mécanique que j'ai eu l'idée du cycle planification puis infiltration de Not A Spyware.",
            "- <b>Alien</b>: pour la direction artistique du jeu, j'ai été fortement influencé par le Cassette Futurism de la licence Alien; on y retrouve de la technologie futuriste à l'aspect rétro des années 80."
          ]
        },
        {
          "type": "img",
          "src": "/assets/images/notaspyware/concept-art.png",
          "alt": "notaspyware-concept-art",
          "modifier": "side-margins"
        },
        {
          "type": "p",
          "content": [
            "Les mécaniques et caractéristiques principales de Not A Spyware sont les suivantes:",
            "- Une caméra en vue <b>top-down</b> avec la possibilité de la déplacer, de la tourner et de zoomer",
            "- Le joueur déplace son personnage en cliquant sur une case au sol, et le fait interagir avec son environnement soit en cliquant, soit en dépliant un menu d'actions contextuelles.",
            "- L'espion dispose de <b>9 gadgets différents</b>, comme la fléchette tranquillisante, la grenade flash, le déguisement…",
            "- On doit <b>éviter la sécurité composée de gardes, de caméras, de pièges et d'alarmes</b>. Les gardes et les caméra ont un cône de vision représentant ce qu'ils peuvent voir.",
            "- Les différentes zones inexplorées du niveau sont recouverts d'un brouillard de guerre. Pour le dissiper, le joueur doit explorer la zone. Les zones explorées sont grisées et les ennemis qui y sont deviennent invisibles pour le joueur.",
            "Avant chaque mission, le joueur doit se planifier son infiltration: c'est à ce stade-là qu'il peut accepter des missions secondaires, améliorer ses gadgets ou acheter de nouvelles ressources ou avoir recours à des complices pour lui faciliter la tâche"
          ]
        },
        {
          "type": "h3",
          "content": ["Intelligence artificielle"]
        },
        {
          "type": "p",
          "content": [
            "<strong>Le comportement des personnages - joueur ou non - sont dictés par des machines à états que j'ai développé moi-même pour me permettre le plus de flexibilité possible.</strong>",
            "Une machine à états est un modèle qui permet de déterminer le comportement d'un système en fonction d'un état actuel et d'états reçus ou en fil d'attente.",
            "Ce modèle offre plusieurs avantages:",
            "Il permet de décomposer un système complexe en plusieurs morceaux. Cela donne une meilleur lisibilité au système, et le rends plus facile à maintenir.",
            "Il est réutilisable dans d'autres circonstances: dans Not A Spyware les PNJs, les cinématiques et les dialogues utilisent tous machine à états ayant la même racine.",
            "Par exemple, le AnimationController d'Unity est une machine à états:"
          ]
        },
        {
          "type": "img",
          "src": "/assets/images/notaspyware/animator.png",
          "alt": "notaspyware-animator",
          "modifier": "side-margins"
        },
        {
          "type": "p",
          "content": [
            "Pour Not A Spyware, j'ai mis en place une machine à états composée de:",
            "- <b>Un état actuel</b>. Cet état est mis à jour à chaque x images afin d'alléger le coup en performance.",
            " - <b>Une queue d'états à exécuter l'un après l'autre</b> et la possibilité d'en insérer ou d'en enlever",
            "- <b>La possibilité d'interrompre l'état actuel</b> et de le remplacer par un nouveau",
            "Chaque état (State) est composé de:",
            "- <b>Un constructeur</b> permettant de créer un état à partir d'un jeu de données spécifiques (par exemple: je crée un état 'Se déplacer vers' à partir d'un Vector3 de destination et d'une condition Marcher ou Courir)",
            "- Une méthode <b>EnterState</b> qui est appelée lorsque cet état devient l'état actuel de la machine.",
            "- Une méthode <b>UpdateState</b> qui est appelée chaque x images.",
            "- Une méthode <b>ExitState</b> qui est appelée lorsque cet état se termine.",
            "- Une méthode <b>SkipState</b> qui est appelée lorsque l'état est interrompu.",
            "Pour déterminer le comportement d'un état, il me suffit donc de créer un nouveau script qui hérite de la classe State et de mettre en place le nouveau comportement en surchargeant les méthodes citées ci-dessus.",
            "Grâce à ce modèle, j'ai donc pu mettre en place les comportements des PNJs tel que la patrouille des gardes, la poursuite du joueur si il se fait repérer, la recherche du joueur si le garde l'a perdu de vue etc."
          ]
        },
        {
          "type": "img",
          "src": "/assets/images/notaspyware/state-machine.png",
          "alt": "notaspyware-state-machine",
          "modifier": "side-margins"
        },
        {
          "type": "h3",
          "content": ["Pathfinding"]
        },
        {
          "type": "p",
          "content": [
            "Pour les déplacements du joueur et des PNJs, j'ai utilisé un système combinant la génération d'une maille de navigation et un algorithme de pathfinding. Je souhaitais que la navigation du jeu se fasse case par case, j'ai donc écrit un algorithme A* afin d'avoir un contrôle total du pathfinding du jeu."
          ]
        },
        {
          "type": "h4",
          "content": ["Maille de navigation"]
        },
        {
          "type": "p",
          "content": [
            "Afin de pouvoir générer le brouillard de guerre entre chaque pièces, il me fallait séparer leurs mailles de navigation.",
            "Pour générer la maille de navigation d'une pièce, je commence par calculer ses dimensions. Le script va ensuite tester plusieurs positions pour déterminer si une case est libre et qu'elle n'est pas bloquée par un obstacles. Une fois toutes les postions testées, chaque case va essayer de se lier à ses voisins à l'aide de Raycasts pour que la maille soit conforme à la géométrie des modèles affichés à l'écran."
          ]
        },
        {
          "type": "img",
          "src": "/assets/images/notaspyware/nav-mesh.png",
          "alt": "notaspyware-nav-mesh",
          "modifier": "side-margins"
        },
        {
          "type": "h4",
          "content": ["Algorithme A*"]
        },
        {
          "type": "p",
          "content": [
            "L'algorithme A* est un algorithme de recherche qui permet de calculer le chemin le plus court entre un point A et un point B. L'algorithme calcule un coût total pour chaque case qui dépend de sa distance avec le point A et le point B. Ensuite, il compare le coût de chaque cases afin de trouver le chemin le moins cher - et donc le plus court - de A à B.",
            "J'ai appliqué cet algorithme dans le jeu sous la forme d'un NavigationManager, qui reçoit des requêtes de calcul de chemin de la part des machines à états ayant besoin de se déplacer. Ces calculs sont exécutés dans l'ordre de manière asynchrone afin de ne pas bloquer les machines à états en attente d'un itinéraire."
          ]
        },
        {
          "type": "img",
          "src": "/assets/images/notaspyware/pathfinding-example.gif",
          "alt": "notaspyware-pathfinding-example",
          "modifier": "side-margins"
        },
        {
          "type": "h3",
          "content": ["Outils d'édition de dialogues"]
        },
        {
          "type": "p",
          "content": [
            "Pour les dialogues arborescents du jeu, il me fallait mettre en place un outil dans l'éditeur d'Unity pour pouvoir créer de nouvelles lignes de dialogues, les reliers entre elles etc.",
            "En utilisant l'API <b>GraphView</b> d'Unity, j'ai crée un outil visuel permettant de:",
            "- </b>Créer un nouveau noeud<b> de ligne de dialogue, de mise à jour de mission, d'ajout d'objet à l'inventaire du joueur…",
            "- <b>Renseigner un nom d'animation</b> à lancer quand le noeud est atteint durant le dialogue",
            "- <b>Déterminer plusieurs points d'entrée</b> selon la situation du joueur (première rencontre, mission accomplie etc)",
            "- <b>Relier les noeuds</b> entre eux afin de créer le déroulement du dialogue",
            "L'outil sauvegarde le dialogue sous forme de ScriptableObject, qui peux ensuite être assigné à un PNJ. Quand le joueur décide de lancer un dialogue, une nouvelle scène de dialogue est affichée, et le ScriptableObject est interprété par le DialogueManager pour afficher le dialogue."
          ]
        },
        {
          "type": "img",
          "src": "/assets/images/notaspyware/dialogue-tree.png",
          "alt": "notaspyware-dialogue-tree"
        },
        {
          "type": "img",
          "src": "/assets/images/notaspyware/dialogue.png",
          "alt": "notaspyware-dialogue"
        }
      ]
    },
    {
      "id": "cryptide",
      "title": "Cryptide",
      "cover": {
        "src": "/assets/images/cryptide.png",
        "alt": "cryptide-cover"
      },
      "desc": "Projet personnel développé sur Godot. Explorez l'État du Nowhere et partez à la chasse aux légendes urbaines dans ce RPG horrifique inspiré par Pokémon et The Goonies.",
      "chips": ["GDScript", "Godot"],
      "overlayContent": [
        {
          "type": "iframe",
          "src": "https://www.youtube.com/embed/9dvq-czWz8A"
        },
        {
          "type": "p",
          "content": [
            "Je travaille actuellement sur Cryptide, un RPG horrifique inspiré de Pokémon, Disco Elysium et les mythes urbains. J'ai débuté ce projet pour m'initier au moteur Godot et à GDScript.",
            "Pour le moment, j'ai implémenté les mécaniques de base de ce genre de jeux: entrer dans une maison et changer de scène, lire un panneau, parler à un PNJ etc",
            "Je travaille actuellement sur l'implémentation des combats, avec la rencontre d'ennemis dans le monde, le lancement du combat dans une scène séparée, les conteneurs de données pour les ennemis et leurs attaques."
          ]
        }
      ]
    },
    {
      "id": "cubekingdoms",
      "title": "Cube Kingdoms",
      "cover": {
        "src": "/assets/images/cubekingdoms.png",
        "alt": "cubekingdoms-cover"
      },
      "desc": "Projet personnel développé sur Unity pour mobile. Partez à l'aventure à travers les Cube Kingdoms pour vaincre le redoutable Randomancien.",
      "chips": ["C#", "Unity", "Mobile"],
      "overlayContent": [
        {
          "type": "iframe",
          "src": "https://www.youtube.com/embed/OXKy4WdRDqA"
        },
        {
          "type": "p",
          "content": [
            "Cube Kingdoms est un rogue-light pour mobile développé en C# sur Unity.",
            "Le joueur gère un groupe d'aventuriers et les guide au long de leur voyage jusqu'au repère du boss final.",
            "Ce projet était l'occasion pour moi de m'essayer au développement de jeux pour mobile, j'ai découvert le concept des machines à états et j'ai mis en pratique mes connaissances en matière de génération procédurale.",
            "L'aventure démarre lorsque le joueur sélectionne son premier personnage. Au cours de l'aventure le joueur traversera plusieurs royaumes, eux-mêmes découpés en une série de rencontres: avec des ennemis, des marchands, des aventuriers à la recherche d'un groupe etc.",
            "Les combat de Cube Kingdoms se font automatiquement. Les personnages du joueur et les ennemis attaquent tour à tour selon une jauge d'action. Le joueur peut tout de même changer l'équipement de ses personnages, les soigner ou améliorer leurs caractéristiques à l'aide d'objets achetés ou trouvés pendant le voyage."
          ]
        }
      ]
    },
    {
      "id": "horrorfactory",
      "title": "Horror Factory",
      "cover": {
        "src": "/assets/images/horrorfactory/thumbnail.png",
        "alt": "horrorfactory-cover"
      },
      "desc": "Projet développé sur Unity lors d'une Game jam. Pris au piège dans une usine délabrée, reconstruisez les machines pour vous échapper tout en évitant une substance mortelle.",
      "chips": ["C#", "Unity"],
      "overlayContent": [
        {
          "type": "img",
          "src": "/assets/images/horrorfactory/1.png",
          "alt": "horrorfactory-1"
        },
        {
          "type": "p",
          "content": [
            "Horror Factory est un jeu de survival horror développé en C# sur Unity lors d'une <a href=\"https://fr.wikipedia.org/wiki/Game_jam\" target=\"_blank\">Game jam</a> d'une semaine. J'étais principalement chargé du développement, mais j'ai aussi participé à la conception du jeu.",
            "Le joueur incarne un explorateur urbain qui se retrouve pris au piège dans une usine hantée. Dans cette usine, une mystérieuse substance couvre les machines, les murs et le sol du bâtiment. Celle-ci craint la lumière, mais est capable de dévorer quiconque s'approche trop près."
          ]
        },
        {
          "type": "img",
          "src": "/assets/images/horrorfactory/2.png",
          "alt": "horrorfactory-2"
        },
        {
          "type": "p",
          "content": [
            "Le joueur trouve un manuel de contremaître, contenant une carte, des informations concernant le fonctionnement des machines, et une jauge représentant la consommation électrique de l'usine. Si la consommation dépasse un certain seuil, le joueur a un temps limité pour atteindre le disjoncteur et le réarmer. Il peut également soulever, tirer, pousser, tourner ou jeter les objets qu'il trouve grâce à une gestion de la physique inspirée des jeux Amnesia.",
            "Le joueur à pour objectif de relancer les machines de l'usine afin de construire l'objet lui permettant de s'échapper."
          ]
        },
        {
          "type": "img",
          "src": "/assets/images/horrorfactory/3.png",
          "alt": "horrorfactory-2"
        }
      ]
    },
    {
      "id": "candlelightvr",
      "title": "Candlelight VR",
      "cover": {
        "src": "/assets/images/candlelightvr/thumbnail.jpg",
        "alt": "candlelightvr-cover"
      },
      "desc": "Projet VR développé sur Unity lors d'une Game jam. Utilisez la physique du jeu pour résoudre des énigmes et vous échappez d'un château hanté par les joueurs précédents.",
      "chips": ["C#", "Unity", "VR"],
      "overlayContent": [
        {
          "type": "img",
          "src": "/assets/images/candlelightvr/1.png",
          "alt": "candlelightvr-1"
        },
        {
          "type": "p",
          "content": [
            "Candlelight VR est un jeu de puzzle développé en C# sur Unity lors d'une <a href=\"https://fr.wikipedia.org/wiki/Game_jam\" target=\"_blank\">Game jam</a> centrée autours de la VR d'une semaine. J'étais le seul développeur du projet et j'ai participé à la conception du jeu. Candlelight a été le premier projet VR auquel j'ai participé.",
            "Le joueur commence la partie dans une cellule, avec comme seule source de lumière une petite bougie. Il trouve également une enveloppe qui, une fois brûlée avec la flamme de la bougie, révèle la clé pour sortir de la cellule.",
            "Le joueur peut dès lors trouver trois puzzles:",
            "- un stand de tir à l'arc avec un coffre à combinaison. Le joueur doit enflammer ses flèches avec la bougie, et tirer dans la pénombre pour révéler la combinaison du coffre.",
            "- une salle d'exposition. Le joueur doit brûler un tableau et récupérer la manivelle caché derrière. Avec la manivelle, il peut déplacer un chandelier sous une échelle, et grâce à celle-ci récupérer le trésor suspendu.",
            "- un laboratoire d'alchimie envahi par la végétation. Le joueur doit suivre une recette tout en faisant attention de ne pas enflammer les plantes avec sa bougie."
          ]
        },
        {
          "type": "img",
          "src": "/assets/images/candlelightvr/2.webp",
          "alt": "candlelightvr-2"
        },
        {
          "type": "p",
          "content": [
            "Le joueur trouve un manuel de contremaître, contenant une carte, des informations concernant le fonctionnement des machines, et une jauge représentant la consommation électrique de l'usine. Si la consommation dépasse un certain seuil, le joueur a un temps limité pour atteindre le disjoncteur et le réarmer. Il peut également soulever, tirer, pousser, tourner ou jeter les objets qu'il trouve grâce à une gestion de la physique inspirée des jeux Amnesia.",
            "Le joueur à pour objectif de relancer les machines de l'usine afin de construire l'objet lui permettant de s'échapper."
          ]
        },
        {
          "type": "img",
          "src": "/assets/images/candlelightvr/3.webp",
          "alt": "candlelightvr-2"
        }
      ]
    },
    {
      "id": "maximtherobot",
      "title": "Maxim the Robot",
      "cover": {
        "src": "/assets/images/maximtherobot/thumbnail.jpg",
        "alt": "maximtherobot-cover"
      },
      "desc": "Jeu de plateforme pour mobile. Incarnez Maxim et ses amis et traversez des niveaux colorés plus originaux les uns que les autres.",
      "chips": ["C#", "Unity", "Mobile"],
      "overlayContent": [
        {
          "type": "iframe",
          "src": "https://www.youtube.com/embed/IRHWkjF5NPQ"
        },
        {
          "type": "p",
          "content": [
            "Maxim the Robot est un jeu de plateformes pour Android et iOs, développé en C# sur Unity par Frozenbots.",
            "Le joueur commence par incarner un robot qui a soif d'aventure, Maxim. Le jeu propose 10 personnages différents, 6 mondes uniques et plus de 90 niveaux. Les personnages ont tous une compétences spéciale, comme le triple saut, le grappin, se rouler en boule pour gagner de la vitesse… Le jeu est fortement inspiré des sidescrollers des années 90, comme la série Mario, Donkey Kong Country ou encore Sonic.",
            "<strong>J'ai rejoint le projet durant 3 mois de stage, au cours duquel ma tâche était de mettre au point un générateur de niveaux procédural afin de proposer au joueur un nouveau niveau exclusif chaque jour.</strong>",
            "Pour parvenir à ce résultat, j'ai d'abord défini des 'cases' avec configurations différentes. Ensuite, j'ai développé un algorithme qui génère un chemin plus ou moins long qui déterminera le tracé entre le départ et l'arrivée du niveau. Des cases sont donc placées pour créer ce parcours, et le générateur fini par créer des zones de cul-de-sac avec des récompenses à partir des issues inutilisées dans le parcours."
          ]
        },
        {
          "type": "figure",
          "src": "/assets/images/maximtherobot/procedural.png",
          "alt": "maximtherobot-procedural",
          "caption": "Exemple de niveau généré avec un algorithme similaire."
        }
      ]
    },
    {
      "id": "meadgard",
      "title": "Meadgard",
      "cover": {
        "src": "/assets/images/meadgard/thumbnail.jpg",
        "alt": "meadgard-cover"
      },
      "desc": "Projet étudiant développé sur Unity. Assurez la survie de votre taverne face à des flots de clients affamés et assoiffés dans ce jeu de gestion loufoque et chaotique.",
      "chips": ["C#", "Unity"],

      "overlayContent": [
        {
          "type": "iframe",
          "src": "https://www.youtube.com/embed/fh3AJSb4pZ0"
        },
        {
          "type": "p",
          "content": [
            "Meadgard est un jeu de gestion pour PC, développé en C# sur Unity dans le cadre de l'obtention de ma licence.",
            "Le joueur démarre la partie en sélectionnant un dieu viking parmis 6 disponibles. Chaque dieu à une taverne à l'apparence unique et un bonus/malus qui lui est propre."
          ]
        },
        {
          "type": "p",
          "content": [
            "Chaque jour le joueur doit préparer sa taverne et assurer le service. Il commence par recevoir une missive qui va indiquer ce qu'il se passera en cours de journée. Ensuite, il peut améliorer le mobilier (plus de places, cuisine plus efficace, plus de stock…), recruter du personnel, ou encore envoyer des voleurs en mission (saboter les tavernes adverses, faire du contre-espionnage…). Une fois la journée lancée, des hordes de clients affamés et assoiffés débarquent dans la taverne et attendent qu'on leur servent leur commande. Attention cependant, il se peut que des voleurs adverses se cachent parmis les clients: si ils sont servis, ils sabotent la taverne du joueur en la salissant ou en volant des ressources.",
            "<strong>Durant l'année de développement de ce projet, je me suis concentré sur les mécaniques principales du projet: le comportement des personnages, les mécaniques de jeu, l'interface etc.</strong>",
            "Le plus grand défi de ce projet a été le comportement des employés: en effet, ceux-ci ont tous un temps d'attente avant d'accomplir une tâche de leur propre chef. Le joueur peut leur indiquer quoi, mais il est plutôt avantageux de spécialiser ses employés et de les laisser agir automatiquement. La solution qui j'ai adoptée était de créer une liste de tâches à faire, triée par ancienneté. À la fin du cooldown d'un employé, il prend la première tâche qu'il peut effectuer dans la liste. Grâce à une machine à états, il était facile de séquencer les différentes actions qu'un employé peut faire, par exemple: se déplacer jusqu'à un client, attendre le temps de prendre sa commande, se rendre en cuisine et ajouter la commande à la liste de tâches des cuisiniers."
          ]
        },
        {
          "type": "figure",
          "src": "/assets/images/meadgard/2.png",
          "alt": "meadgard-2",
          "caption": "La machine à états des serveurs et serveuses."
        }
      ]
    }
  ]
}
